(()=>{function e(e,r){if(e){if("string"==typeof e)return t(e,r);var o=Object.prototype.toString.call(e).slice(8,-1);return"Object"===o&&e.constructor&&(o=e.constructor.name),"Map"===o||"Set"===o?Array.from(e):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?t(e,r):void 0}}function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,o=new Array(t);r<t;r++)o[r]=e[r];return o}var r,o=document.querySelector("main"),n=Array.from(document.querySelectorAll(".todo-item")),i=function(e){if(Array.isArray(e))return e}(r=n)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(r)||e(r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),l=i[0],a=i.slice(1),d=document.querySelector(".no-todo-item");Echo.private("App.Models.Todo.x").listen(".TodoCreated",(function(e){console.log("Created",e),d&&(d.remove(),d=null);var t=l.cloneNode(!0);t.setAttribute("id",e.model.id),t.removeAttribute("style");var r=t.querySelector(".container .title *"),n=t.querySelector(".container .status *"),i=t.querySelector(".container .description *"),a=t.querySelector(".container .due *"),c=t.querySelector(".container .edit > *"),u=t.querySelector(".container .delete > *");r.innerHTML=e.model.title,n.innerHTML=e.model.status,i.innerHTML=e.model.description,null===e.model.due?a.parentElement.remove():a.innerHTML=e.model.due,c.setAttribute("href",c.getAttribute("href").replace("-1",e.model.id)),u.setAttribute("href",u.getAttribute("href").replace("-1",e.model.id)),o.appendChild(t)}));var c,u=function(t,r){var o="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!o){if(Array.isArray(t)||(o=e(t))||r&&t&&"number"==typeof t.length){o&&(t=o);var n=0,i=function(){};return{s:i,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var l,a=!0,d=!1;return{s:function(){o=o.call(t)},n:function(){var e=o.next();return a=e.done,e},e:function(e){d=!0,l=e},f:function(){try{a||null==o.return||o.return()}finally{if(d)throw l}}}}(a);try{var s=function(){var e=c.value,t=e.getAttribute("id"),r=e.querySelector(".container .title *"),o=e.querySelector(".container .status *"),n=e.querySelector(".container .description *"),i=e.querySelector(".container .due *")||l.cloneNode(!0).querySelector(".container .due *");Echo.private("App.Models.Todo."+t).listen(".TodoSaved",(function(e){return console.log("Saved",e)})).listen(".TodoUpdated",(function(t){console.log("Updated",t),e.classList.add("edited-todo-item"),e.addEventListener("click",(function(){e.classList.remove("edited-todo-item")}),{once:!0}),r.innerHTML=t.model.title,o.innerHTML=t.model.status,n.innerHTML=t.model.description,i&&(i.innerHTML=t.model.due)})).listen(".TodoDeleted",(function(t){console.log("Deleted",t),e.remove()})).listen(".TodoTrashed",(function(e){return console.log("Trashed",e)})).listen(".TodoRestored",(function(e){return console.log("Restored",e)}))};for(u.s();!(c=u.n()).done;)s()}catch(e){u.e(e)}finally{u.f()}})();